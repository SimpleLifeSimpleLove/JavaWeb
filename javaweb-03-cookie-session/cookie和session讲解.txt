
1.会话：用户打开一个浏览器，点击了很多超链接，访问了多个Web资源，关闭浏览器，这个过程称之为会话
    有状态会话：一个同学来过教室，下次再来教室，我们会知道这个同学曾经来过，称之为有状态会话。

一个网站，怎么证明你来过？
    客户端         服务端
    (1).服务端给客户端一个信件，客户端下次访问服务器带上信件就可以了;  cookie
    (2).服务器登记你来过了，下次你来的时候我来匹配你;  session

2.保存会话的两种技术
    cookie : 客户端技术(请求、响应)
    session : 服务器技术，利用这个技术，可以保存用户的会话信息，我们可以把信息或者数据存放在Session中!

    常见应用：网站登录之后，你下次不用再登录了，第二次访问直接就上去了!


3.Cookie
    1.从服务器中拿到cookie
    2.服务器响应给客户端cookie

    cookie一般会保存在本地的用户目录下Appdata
    一个网站Cookie是否存在上限? 300个Cookie上限
    一个Cookie只能保存一个信息
    一个Web站点可以给浏览器发送多个Cookie，最多存放20个Cookie
    Cookie有大小限制,4kb
    Cookie传输中文出现乱码问题：使用URLDecoder.decode和URLDecoder.decode解决

    删除Cookie:
        (1) 不设置有效期，关闭浏览器，自动失效
        (2) 设置有效期为0


4.Session(重点)
    什么是Session?
        服务器会给每一个用户(浏览器)创建一个Session对象;
        一个Session独占一个浏览器，只要浏览器没有关闭，这个Session就存在
        用户登录之后，整个网站都可以访问! ---> 保存用户信息; 保存购物车的信息......
    使用场景：
        保存一个登陆用户的信息;
        购物车信息;
        在整个网站中经常会使用的数据，我们将它保存在Session中;
    会话过期(两种方式)：
        手动设置：session.invalidate();  // 手动注销 Session, 但是只要再次访问浏览器会立即生成一个新的 Session
        自动设置：在 Web.xml 文件中配置

    Cookie和Session的区别：
        Cookie是把用户的数据写给用户的浏览器，浏览器保存(可以存在多个)
        Session把用户的数据写到用户独占Session中，服务器端保存(保存重要信息，减少服务器资源的浪费)
        Session对象由服务器自动创建

